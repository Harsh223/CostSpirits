name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Check Python syntax
      run: |
        python -m py_compile CostSpirits.py
        python -m py_compile run_costspirits.py
    
    - name: Validate JSON files
      run: |
        python -c "import json; json.load(open('subsystem_headers.json'))"
    
    - name: Check if application imports successfully
      run: |
        python -c "
        import sys
        import os
        sys.path.insert(0, '.')
        
        # Test basic imports
        import streamlit as st
        import pandas as pd
        import openpyxl
        from st_aggrid import AgGrid
        
        print('✅ All dependencies imported successfully')
        
        # Test if the main script can be imported
        import importlib.util
        spec = importlib.util.spec_from_file_location('CostSpirits', 'CostSpirits.py')
        module = importlib.util.module_from_spec(spec)
        
        print('✅ CostSpirits.py can be imported successfully')
        "

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics